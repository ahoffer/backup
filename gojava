#! /bin/bash
# Example
# gojava 11
# gojava 17
# gojava 8

JAVA_VER=$1

re='^[0-9]+$'
if ! [[ $JAVA_VER =~ $re ]]; then
  echo "$JAVA_VER is not a number. Use a Java version like "11" or "17"" >&2
  exit 1
fi

echo "Switching to Java version $JAVA_VER"
JAVA_TARGET=$(update-alternatives --list java | grep "\-$JAVA_VER")
JAVAC_TARGET=$(update-alternatives --list javac | grep "\-$JAVA_VER")

# Handle Java 8 specifically
if [ -z "$JAVA_TARGET" ] && [ "$JAVA_VER" == 8 ]; then
  JAVA_TARGET=$(update-alternatives --list java | grep "\-1.8")
  JAVAC_TARGET=$(update-alternatives --list javac | grep "\-1.8")
fi

# Ensure both JAVA_TARGET and JAVAC_TARGET are set
if [ -z "$JAVA_TARGET" ] || [ -z "$JAVAC_TARGET" ]; then
  echo "Java version $JAVA_VER not found." >&2
  exit 1
fi

echo "Found java=$JAVA_TARGET"
echo "Found javac=$JAVAC_TARGET"

# Updating java
echo "Updating java..."
sudo update-alternatives --set java "$JAVA_TARGET"
if [ $? -ne 0 ]; then
  echo "Failed to update java." >&2
  exit 1
fi

# Updating javac
echo "Updating javac..."
sudo update-alternatives --set javac "$JAVAC_TARGET"
if [ $? -ne 0 ]; then
  echo "Failed to update javac." >&2
  exit 1
fi

# Set JAVA_HOME
jhome=$(dirname "$(dirname "$JAVA_TARGET")")
echo "export JAVA_HOME=\"$jhome\"" >"$HOME/.javahome"
echo ""
echo 'IMPORTANT: source ~/.javahome' to set JAVA_HOME="$jhome"
