#!/bin/sh
# This script runs the OWASP Dependency Checker in a Docker container.
# Run the script without flags in the root directory of the project.

# BEFORE running this script, BUILD THE PROJECT.
# Build the project to create the JAR files and
# node_modules directories. These will be scanned. If the project
# is not built, there is nothing for the tool to scan.
# By default, all Dependency Check analyzers are on. The tool
# will scan Java, NPM, Python, and potentially others.

# The tool creates a report, and provides it in many formats.
# The reports are written to the PWD. The names of the files
# match the pattern "dependency-check-report.*"
# The tool also creates an "odc-reports" directory, but it is empty.

# Working files and cached data are stored under this directory
DC_DIRECTORY=$HOME/OWASP-Dependency-Check
DATA_DIRECTORY="$DC_DIRECTORY/data"
CACHE_DIRECTORY="$DC_DIRECTORY/data/cache"
# By default, start the scan in the present working directory
DC_PROJECT="dependency-check scan: $(pwd)"
DC_VERSION="latest"

if [ ! -d "$DATA_DIRECTORY" ]; then
  echo "Initially creating persistent directory: $DATA_DIRECTORY"
  mkdir -p "$DATA_DIRECTORY"
fi
if [ ! -d "$CACHE_DIRECTORY" ]; then
  echo "Initially creating persistent directory: $CACHE_DIRECTORY"
  mkdir -p "$CACHE_DIRECTORY"
fi

# Make sure we are using the latest version
docker pull owasp/dependency-check:$DC_VERSION

time docker run --rm \
  -e user=$USER \
  -u $(id -u):$(id -g) \
  --volume $(pwd):/src:z \
  --volume "$DATA_DIRECTORY":/usr/share/dependency-check/data:z \
  owasp/dependency-check:$DC_VERSION \
  --exclude "/src/docs" \
  --scan /src \
  --format "ALL" \
  --project "$DC_PROJECT" \
  --nvdApiKey "e1e67587-3def-498c-b4cb-d44f123cf018" \
  --hostedSuppressionsValidForHours 72 \
  --prettyPrint

# Use suppression like this: (where /src == $pwd)
# --suppression "/src/security/dependency-check-suppression.xml"

