#!/bin/bash
set -euo pipefail

# Run OWASP Dependency Checker in Docker.
# Execute from project root after running yarn install.

readonly NODE_EXCLUDES="**/node_modules,**/npm-packages-offline-cache,**/.yarn/cache"
readonly DEFAULT_EXCLUDES="${NODE_EXCLUDES},/src/docs,/src/tests"
DOCKER_TAG="11.1.0"
SCAN_DIR="${PWD}"
OUTPUT_DIR="${PWD}"
DATA_DIR="${HOME}/owasp_data/data"
SUPPRESSION_FILE="" # Initialize as empty
EXCLUDE_DIRS="${DEFAULT_EXCLUDES}"
NVD_API_KEY="e1e67587-3def-498c-b4cb-d44f123cf018"

usage() {
  echo "Usage: $(basename "$0") [OPTIONS]"
  echo "Options:"
  echo "  -h  Show help"
  echo "  -t  docker tag"
  echo "  -s  Suppression file"
  echo "  -e  Additional exclude dirs (comma-separated)"
  echo "  -k  NVD API key"
  echo "  -d  Scan directory (default: pwd)"
  echo "  -o  Output directory (default: pwd)"
  exit 0
}

# Process arguments
while getopts "hv:s:e:k:cd:o:" opt; do
  case "$opt" in
  h) usage ;;
  t) DOCKER_TAG="$OPTARG" ;;
  s) SUPPRESSION_FILE="$OPTARG" ;;
  e) EXCLUDE_DIRS="${EXCLUDE_DIRS},${OPTARG}" ;;
  k) NVD_API_KEY="$OPTARG" ;;
  d) SCAN_DIR="$OPTARG" ;;
  o) OUTPUT_DIR="$OPTARG" ;;
  *) usage ;;
  esac
done

# Validate directories
[[ -d "${SCAN_DIR}" ]] || {
  echo "Error: Invalid scan directory: ${SCAN_DIR}" >&2
  exit 1
}
mkdir -p "${OUTPUT_DIR}" "${DATA_DIR}"

# Build base Docker command
DOCKER_CMD="docker run --rm \
  -e user=${USER} \
  -u $(id -u):$(id -g) \
  --volume ${SCAN_DIR}:/src:z \
  --volume ${DATA_DIR}:/usr/share/dependency-check/data:z \
  --volume ${OUTPUT_DIR}:/report:z \
  owasp/dependency-check:${DOCKER_TAG} \
  --scan /src \
  --out /report \
  --format ALL \
  --project 'dependency-check scan: ${SCAN_DIR}' \
  --nvdApiKey '${NVD_API_KEY}' \
  --nvdValidForHours 72 \
  --enableExperimental \
  --nodeAuditSkipDevDependencies \
  --prettyPrint"

# Add suppression file only if it exists
if [[ -n "${SUPPRESSION_FILE}" ]] && [[ -f "${SUPPRESSION_FILE}" ]]; then
  RELATIVE_SUPPRESSION_PATH="$(realpath --relative-to="${SCAN_DIR}" "${SUPPRESSION_FILE}")"
  DOCKER_CMD+=" --suppression \"/src/${RELATIVE_SUPPRESSION_PATH}\""
fi

# Add exclude dirs if specified
if [[ -n "${EXCLUDE_DIRS}" ]]; then
  DOCKER_CMD+=" --exclude \"${EXCLUDE_DIRS}\""
fi

# Execute the command
eval "${DOCKER_CMD}" || {
  echo "Scan failed" >&2
  exit 1
}

echo "Scan completed successfully! Reports saved in: ${OUTPUT_DIR}/dependency-check-report.*"
echo "Run the findings script to print a report"
